#!/usr/bin/env bash
set -euo pipefail

PROJECT_NAME=${1:-exampro}
TARGET_DIR=${2:-$(pwd)/$PROJECT_NAME}

log(){
  printf '[scaffold] %s\n' "$1"
}

usage(){
  cat <<USAGE
Usage: $0 [project_name] [target_directory]

Creates a new Laravel project with common scaffolding used by the ExamPro platform.
If Composer and the Laravel installer are available, they will be used to generate
an official Laravel application. Otherwise the script falls back to generating the
Laravel directory skeleton so developers can manually copy their framework files later.
USAGE
}

if [[ ${1:-} == "-h" || ${1:-} == "--help" ]]; then
  usage
  exit 0
fi

if [[ -d "$TARGET_DIR" ]]; then
  log "Target directory $TARGET_DIR already exists. Aborting to avoid overwriting files."
  exit 1
fi

log "Preparing ExamPro Laravel project at $TARGET_DIR"
mkdir -p "$TARGET_DIR"

pushd "$TARGET_DIR" >/dev/null

if command -v composer >/dev/null 2>&1; then
  log "Composer detected. Bootstrapping Laravel via create-project."
  if composer create-project laravel/laravel "$PROJECT_NAME" >/tmp/exampro_scaffold.log 2>&1; then
    shopt -s dotglob
    mv "$PROJECT_NAME"/* .
    shopt -u dotglob
    rmdir "$PROJECT_NAME"
    log "Laravel application scaffolded with Composer (see /tmp/exampro_scaffold.log for details)."
  else
    log "Composer create-project failed. Check /tmp/exampro_scaffold.log for diagnostics."
    exit 1
  fi
else
  log "Composer not found. Creating placeholder Laravel directory structure."
  mkdir -p app/Console app/Exceptions app/Http/Controllers/Auth app/Http/Middleware \
           app/Models bootstrap cache config database/factories database/migrations \
           database/seeders public/resources resources/js resources/lang resources/views \
           routes storage/app storage/framework/cache storage/framework/sessions \
           storage/framework/views storage/logs tests/Feature tests/Unit
  touch routes/web.php routes/api.php routes/channels.php routes/console.php
  cat <<'ENV' > .env.example
APP_NAME=ExamPro
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=exampro
DB_USERNAME=root
DB_PASSWORD=

BROADCAST_DRIVER=log
CACHE_DRIVER=file
FILESYSTEM_DISK=local
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=mt1

VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
ENV
  log "Placeholder Laravel structure created. Remember to copy vendor/ files after installing Laravel."
fi

cat <<'GITIGNORE' > .gitignore
/vendor/
/node_modules/
/public/storage
/storage/*.key
.env
.phpunit.result.cache
Homestead.yaml
Homestead.json
/.idea
/.vscode
/public/hot
/storage/framework/cache
/storage/framework/sessions
/storage/framework/views
/storage/logs/*.log
GITIGNORE

cat <<'README' > README.md
# ExamPro Laravel Scaffold

This directory was generated by `scripts/scaffold_laravel.sh`. If you ran the
script without Composer, install Laravel by copying the framework files into
this directory or rerun the script after installing Composer.

## Next Steps
1. Configure your `.env` file from `.env.example`.
2. Run database migrations once Laravel is available.
3. Install frontend dependencies with Vite, TailwindCSS CDN, or both as needed.
README

popd >/dev/null

log "Scaffolding complete."
